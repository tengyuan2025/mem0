# 开发环境备用 Docker 镜像 (网络问题版本)
# 如果网络有问题，使用这个版本

# 使用更稳定的基础镜像
FROM ubuntu:22.04

# 避免交互式安装
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app
ENV HF_HOME=/root/.cache/huggingface
ENV TRANSFORMERS_CACHE=/root/.cache/torch/transformers

# 设置工作目录
WORKDIR /app

# 更新包管理器并安装Python和基础工具
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    gcc \
    g++ \
    curl \
    wget \
    git \
    vim \
    htop \
    build-essential \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# 创建Python软链接
RUN ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

# 升级pip并配置国内镜像源
RUN python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple/ || \
    python -m pip install --upgrade pip -i https://mirrors.aliyun.com/pypi/simple/ || \
    python -m pip install --upgrade pip

# 配置pip使用国内镜像
RUN mkdir -p ~/.pip && echo "[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple/\ntrusted-host = pypi.tuna.tsinghua.edu.cn" > ~/.pip/pip.conf

# 复制依赖文件
COPY requirements-chinese.txt /app/
COPY pyproject.toml /app/

# 分步安装依赖，提高成功率
RUN pip install --no-cache-dir fastapi>=0.104.0 uvicorn[standard]>=0.24.0 || \
    pip install --no-cache-dir fastapi uvicorn[standard] -i https://mirrors.aliyun.com/pypi/simple/

RUN pip install --no-cache-dir pydantic>=2.7.3 requests>=2.25.0 || \
    pip install --no-cache-dir pydantic requests -i https://mirrors.aliyun.com/pypi/simple/

# 安装Mem0核心依赖
RUN pip install --no-cache-dir qdrant-client>=1.9.1 openai>=1.33.0 || \
    pip install --no-cache-dir qdrant-client openai -i https://mirrors.aliyun.com/pypi/simple/

# 尝试安装中文依赖，如果失败则跳过
RUN pip install --no-cache-dir sentence-transformers>=3.0.0 || \
    pip install --no-cache-dir sentence-transformers -i https://mirrors.aliyun.com/pypi/simple/ || \
    echo "Warning: sentence-transformers installation failed"

RUN pip install --no-cache-dir transformers>=4.30.0 || \
    pip install --no-cache-dir transformers -i https://mirrors.aliyun.com/pypi/simple/ || \
    echo "Warning: transformers installation failed"

RUN pip install --no-cache-dir torch>=1.11.0 --index-url https://download.pytorch.org/whl/cpu || \
    pip install --no-cache-dir torch -i https://mirrors.aliyun.com/pypi/simple/ || \
    echo "Warning: torch installation failed"

# 安装开发工具
RUN pip install --no-cache-dir pytest ipython black isort || \
    pip install --no-cache-dir pytest ipython black isort -i https://mirrors.aliyun.com/pypi/simple/

# 创建必要目录
RUN mkdir -p /app/data /app/logs /root/.cache/huggingface /root/.cache/torch/transformers

# 设置权限
RUN chmod -R 755 /app

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 开发环境启动命令
CMD ["python", "-m", "uvicorn", "mem0.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]