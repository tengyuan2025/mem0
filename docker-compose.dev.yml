version: '3.8'

services:
  # Qdrant 向量数据库
  qdrant:
    image: qdrant/qdrant:v1.8.1
    container_name: mem0-qdrant-dev
    ports:
      - "6333:6333"    # REST API
      - "6334:6334"    # gRPC API  
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mem0 API 服务
  mem0-api:
    build:
      context: .
      dockerfile: Dockerfile.dev.fast
    container_name: mem0-api-dev
    ports:
      - "8000:8000"
    volumes:
      # 挂载源代码，支持热重载
      - .:/app
      - mem0_data:/app/data
      - mem0_logs:/app/logs
      # 缓存模型下载目录
      - huggingface_cache:/root/.cache/huggingface
      - transformers_cache:/root/.cache/torch/transformers
    environment:
      # 基础配置
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - MEM0_DIR=/app/data
      
      # 向量数据库配置
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MEM0_VECTOR_STORE_PROVIDER=qdrant
      
      # LLM配置 - 优先使用豆包，回退到OpenAI
      - MEM0_LLM_PROVIDER=doubao
      - MEM0_LLM_MODEL=doubao-pro-32k
      - DOUBAO_API_BASE=https://ark.cn-beijing.volces.com/api/v3
      
      # 嵌入模型配置 - 使用本地中文模型
      - MEM0_EMBEDDER_PROVIDER=huggingface
      - MEM0_EMBEDDER_MODEL=BAAI/bge-large-zh-v1.5
      
      # API密钥 - 从.env文件或环境变量获取
      - DOUBAO_API_KEY=${DOUBAO_API_KEY}
      - ARK_API_KEY=${ARK_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # HuggingFace配置
      - HF_HOME=/root/.cache/huggingface
      - TRANSFORMERS_CACHE=/root/.cache/torch/transformers
      
      # 开发模式配置
      - DEBUG=1
      - LOG_LEVEL=DEBUG
      
    depends_on:
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s  # 给模型下载足够时间

  # 可选：Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: mem0-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  qdrant_data:
    driver: local
  mem0_data:
    driver: local
  mem0_logs:
    driver: local
  redis_data:
    driver: local
  huggingface_cache:
    driver: local
  transformers_cache:
    driver: local

networks:
  default:
    name: mem0-dev-network